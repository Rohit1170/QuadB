double median(vector<int>& nums){
    int n=nums.size();
    if(n==0)
        return 0;
        
    if(n%2==0){
        return (nums[n/2-1]+nums[n/2])/2.0;
    }
    else{
        return nums[n/2];
    }
}
int main(){
    vector<int>nums={1,2,3,4,5};
    cout<<"median: "<<median(nums)<<endl;
    return 0;
}

//Rust Program

fn median(nums:&[i32])->f64{
    let n=nums.len();
    if n==0{
        return 0.0;
    }
    if n%2==0{
        let mid=n/2;
        return (nums[mid-1]+nums[mid]) as f64/2.0;
    }
    else{
        return nums[n/2] as f64;
    }
}
fn main(){
    let nums=vec![1,2,3,4,5];
    println!("median: {}",median(&nums));
}
